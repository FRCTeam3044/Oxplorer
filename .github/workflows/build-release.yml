# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build Oxplorer with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: Pathfinding

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish Oxplorer Publication to GitHub Packages
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
          build-root-directory: Pathfinding
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Pages
        if: github.event_name == 'release'
        uses: actions/configure-pages@v4
      - name: Upload Javadoc artifact
        if: github.event_name == 'release'
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./Pathfinding/build/docs/javadoc"
      - name: Deploy Oxplorer Javadoc to GitHub Pages
        if: github.event_name == 'release'
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Mark as latest
        if: github.event_name == 'release'
        run: |
          gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/FRCTeam3044/Oxplorer/releases/${{ github.event.release.id }} -f make_latest=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
